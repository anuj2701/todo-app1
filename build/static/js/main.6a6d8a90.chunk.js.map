{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","event","target","Button","onClick","collection","doc","id","set","merge","List","ListItem","ListItemAvatar","Date","document","data","event_date","toString","ListItemText","primary","secondary","delete","root","flexGrow","menuButton","marginRight","title","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","addTodo","preventDefault","add","timestamp","FieldValue","serverTimestamp","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","variant","FormControl","InputLabel","Input","disabled","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a6d8a90.chunk.js","sourcesContent":["  import firebase from \"firebase\";\r\n\r\n  const firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAiICIMYV9xA-i6MnKA9wf4R3ste37w59A\",\r\n    authDomain: \"todo-app-79a73.firebaseapp.com\",\r\n    projectId: \"todo-app-79a73\",\r\n    storageBucket: \"todo-app-79a73.appspot.com\",\r\n    messagingSenderId: \"283791452186\",\r\n    appId: \"1:283791452186:web:6b8342dc3b8b9d7d2fc9a3\",\r\n    measurementId: \"G-5XRG0Y4TBV\"\r\n  });\r\n\r\n  const db = firebaseApp.firestore();\r\n  \r\n  export default db;","import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport React from 'react';\r\nimport './Todo.css'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport {List,Modal,Button, Avatar, ListItem, ListItemAvatar, ListItemText, useEventCallback} from '@material-ui/core'\r\nimport db from './firebase';\r\nimport firebase from 'firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\nfunction Todo(props) {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState();\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const gettime = () =>{\r\n        const timestamp = Date(document.data.event_date).toString();\r\n    }\r\n\r\n    const updateTodo = () =>{\r\n\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo:input\r\n        },{ merge: true })\r\n        setOpen(false);\r\n\r\n    }\r\n    return (\r\n        <>\r\n    \r\n        <Modal\r\n          open={open}\r\n          onClose={e => setOpen(false)}\r\n          className=\"modal\"\r\n        >\r\n          <div className={classes.paper}  >\r\n              <h1 className=\"addtask\">Edit Your Todo</h1>\r\n              <input  placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)}/>\r\n              <Button onClick={updateTodo} className=\"editbut\">update</Button>\r\n          </div>\r\n         </Modal>\r\n        <List className=\"todo_list\" > \r\n        <ListItem>\r\n        <ListItemAvatar  >\r\n\r\n        \r\n         {gettime}\r\n        \r\n        \r\n        </ListItemAvatar>\r\n            <ListItemText primary={props.todo.todo} secondary=\"tasküëÜüèª\"/>\r\n        </ListItem>\r\n        <Button onClick={e => setOpen(true)} className=\"editbut\">Edit</Button>\r\n        <HighlightOffIcon onClick={event => db.collection('todos').doc(props.todo.id).delete()}>Delete‚ùå</HighlightOffIcon>\r\n        \r\n\r\n        </List>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react';\nimport { useState,useEffect } from 'react';\nimport './App.css';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport Todo from './Todo'\nimport db from './firebase';\nimport firebase from 'firebase';\nimport { makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { CenterFocusStrong } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    \n\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [todos, setTodos] = useState([\"hey there\", \"how are you\", \"my name is anuj\"]);\n  const [input, setInput] = useState('')\n  \n  useEffect(() => {\n  db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      // console.log(snapshot.docs.map(doc => doc.data()));\n      setTodos(snapshot.docs.map(doc => ({id: doc.id ,todo: doc.data().todo})))\n\n    })\n  }, [])\n\n  const addTodo = (event) => {\n    event.preventDefault();\n\n      db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    \n    setInput('')\n  }\n\n  return (\n    <>\n    <div className={classes.root}>\n    <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n        \n      </IconButton>\n      <Typography variant=\"h6\" className={classes.title}>\n        To do\n      </Typography>\n      \n    </Toolbar>\n    </AppBar>\n    </div>\n\n\n    <div className=\"App\">\n      <h1 className=\"addtask\"> My Day... </h1>\n      <form>\n      <FormControl>\n        <InputLabel >‚ûï Add a task</InputLabel>\n        <Input className=\"inputme\"value={input} onChange={event => setInput(event.target.value)}/>\n      </FormControl>\n         \n        <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">Add Todo</Button>\n        <button onClick={addTodo}></button>\n      </form>\n\n\n      <ul className=\"todoscolor\">\n        {todos.map(todo => (\n          <Todo todo={todo}/>\n        ))}\n\n      </ul>\n    </div>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}